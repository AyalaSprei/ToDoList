{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nconst apiUrl = config.apiUrl;\naxios.interceptors.response.use(response => response, error => {\n  console.error('Axios Response Error:', error);\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', 3);\n    try {\n      const response = await axios.post(`${apiUrl}/items`, {\n        Name: name,\n        IsComplete: false // Assuming you want to set IsComplete to false for new tasks\n      });\n      return response.data;\n    } catch (error) {\n      // Handle error\n      console.error('Error adding task:', error.message);\n      return null;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const response = await axios.put(`${apiUrl}/items/${id}`, {\n        IsComplete: isComplete\n      });\n      return response.data;\n    } catch (error) {\n      // Handle error\n      console.error('Error setting task completion:', error.message);\n      return null;\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask');\n    try {\n      const response = await axios.delete(`${apiUrl}/items/${id}`);\n      if (response.status === 204) {\n        console.log('Task deleted successfully');\n      } else {\n        // Handle unexpected response status\n        console.error('Error deleting task:', response.statusText);\n      }\n    } catch (error) {\n      // Handle error\n      console.error('Error deleting task:', error.message);\n    }\n  }\n};","map":{"version":3,"names":["axios","config","apiUrl","interceptors","response","use","error","console","Promise","reject","getTasks","result","get","data","addTask","name","log","post","Name","IsComplete","message","setCompleted","id","isComplete","put","deleteTask","delete","status","statusText"],"sources":["C:/Users/שפריי/Documents/שנה ג/2/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\nimport config from './config';\nconst apiUrl = config.apiUrl;\n\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('Axios Response Error:', error);\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`)    \n    return result.data;\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', 3);\n\n    try {\n      const response = await axios.post(`${apiUrl}/items`, {\n        Name: name,\n        IsComplete: false, // Assuming you want to set IsComplete to false for new tasks\n      });\n\n      return response.data;\n    } catch (error) {\n      // Handle error\n      console.error('Error adding task:', error.message);\n      return null;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n\n    try {\n      const response = await axios.put(`${apiUrl}/items/${id}`, {\n        IsComplete: isComplete,\n      });\n\n      return response.data;\n    } catch (error) {\n      // Handle error\n      console.error('Error setting task completion:', error.message);\n      return null;\n    }\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask');\n\n    try {\n      const response = await axios.delete(`${apiUrl}/items/${id}`);\n\n      if (response.status === 204) {\n        console.log('Task deleted successfully');\n      } else {\n        // Handle unexpected response status\n        console.error('Error deleting task:', response.statusText);\n      }\n    } catch (error) {\n      // Handle error\n      console.error('Error deleting task:', error.message);\n    }\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,MAAMC,MAAM,GAAGD,MAAM,CAACC,MAAM;AAE5BF,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC5BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACTC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC7C,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAe;EACbI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAEV,MAAO,QAAO,CAAC;IACjD,OAAOS,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBR,OAAO,CAACS,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;IAEzB,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACiB,IAAI,CAAE,GAAEf,MAAO,QAAO,EAAE;QACnDgB,IAAI,EAAEH,IAAI;QACVI,UAAU,EAAE,KAAK,CAAE;MACrB,CAAC,CAAC;MAEF,OAAOf,QAAQ,CAACS,IAAI;IACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACc,OAAO,CAAC;MAClD,OAAO,IAAI;IACb;EACF,CAAC;EACDC,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtChB,OAAO,CAACS,GAAG,CAAC,cAAc,EAAE;MAAEM,EAAE;MAAEC;IAAW,CAAC,CAAC;IAE/C,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMJ,KAAK,CAACwB,GAAG,CAAE,GAAEtB,MAAO,UAASoB,EAAG,EAAC,EAAE;QACxDH,UAAU,EAAEI;MACd,CAAC,CAAC;MAEF,OAAOnB,QAAQ,CAACS,IAAI;IACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACc,OAAO,CAAC;MAC9D,OAAO,IAAI;IACb;EACF,CAAC;EAEDK,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxBf,OAAO,CAACS,GAAG,CAAC,YAAY,CAAC;IAEzB,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAAC0B,MAAM,CAAE,GAAExB,MAAO,UAASoB,EAAG,EAAC,CAAC;MAE5D,IAAIlB,QAAQ,CAACuB,MAAM,KAAK,GAAG,EAAE;QAC3BpB,OAAO,CAACS,GAAG,CAAC,2BAA2B,CAAC;MAC1C,CAAC,MAAM;QACL;QACAT,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEF,QAAQ,CAACwB,UAAU,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACc,OAAO,CAAC;IACtD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}