{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nconst apiUrl = config.apiUrl;\nconst responseInterceptor = axios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response.status == 500) {\n    setError(true);\n  }\n  if (error.response.status == 401) {\n    alert(\"you need to relogin\");\n  }\n  if (error.response.status == 403) {\n    alert(\"you are not alowed to do the action!\");\n  }\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const response = await axios.post(`${apiUrl}/items`, {\n        Name: 3,\n        IsComplete: false // Assuming you want to set IsComplete to false for new tasks\n      });\n      return response.data;\n    } catch (error) {\n      // Handle error\n      console.error('Error adding task:', error.message);\n      return null;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const response = await axios.put(`${apiUrl}/items/${id}`, {\n        IsComplete: isComplete\n      });\n      return response.data;\n    } catch (error) {\n      // Handle error\n      console.error('Error setting task completion:', error.message);\n      return null;\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask');\n    try {\n      const response = await axios.delete(`${apiUrl}/items/${id}`);\n      if (response.status === 200) {\n        console.log('Task deleted successfully');\n      } else {\n        // Handle unexpected response status\n        console.error('Error deleting task:', response.statusText);\n      }\n    } catch (error) {\n      // Handle error\n      console.error('Error deleting task:', error.message);\n    }\n  }\n};","map":{"version":3,"names":["axios","config","apiUrl","responseInterceptor","interceptors","response","use","error","status","setError","alert","Promise","reject","getTasks","result","get","data","addTask","name","console","log","post","Name","IsComplete","message","setCompleted","id","isComplete","put","deleteTask","delete","statusText"],"sources":["C:/Users/שפריי/Documents/שנה ג/2/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\nimport config from './config';\nconst apiUrl = config.apiUrl;\n\nconst responseInterceptor = axios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n  \n    if (error.response.status == 500) {\n      setError(true);\n    }\n    if (error.response.status == 401) {\n      alert(\"you need to relogin\");\n    }\n    if (error.response.status == 403) {\n      alert(\"you are not alowed to do the action!\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`)    \n    return result.data;\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name);\n\n    try {\n      const response = await axios.post(`${apiUrl}/items`, {\n        Name: 3,\n        IsComplete: false, // Assuming you want to set IsComplete to false for new tasks\n      });\n\n      return response.data;\n    } catch (error) {\n      // Handle error\n      console.error('Error adding task:', error.message);\n      return null;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n\n    try {\n      const response = await axios.put(`${apiUrl}/items/${id}`, {\n        IsComplete: isComplete,\n      });\n\n      return response.data;\n    } catch (error) {\n      // Handle error\n      console.error('Error setting task completion:', error.message);\n      return null;\n    }\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask');\n\n    try {\n      const response = await axios.delete(`${apiUrl}/items/${id}`);\n\n      if (response.status === 200) {\n        console.log('Task deleted successfully');\n      } else {\n        // Handle unexpected response status\n        console.error('Error deleting task:', response.statusText);\n      }\n    } catch (error) {\n      // Handle error\n      console.error('Error deleting task:', error.message);\n    }\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,MAAMC,MAAM,GAAGD,MAAM,CAACC,MAAM;AAE5B,MAAMC,mBAAmB,GAAGH,KAAK,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CACxDD,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAE,KAAK,IAAK;EAET,IAAIA,KAAK,CAACF,QAAQ,CAACG,MAAM,IAAI,GAAG,EAAE;IAChCC,QAAQ,CAAC,IAAI,CAAC;EAChB;EACA,IAAIF,KAAK,CAACF,QAAQ,CAACG,MAAM,IAAI,GAAG,EAAE;IAChCE,KAAK,CAAC,qBAAqB,CAAC;EAC9B;EACA,IAAIH,KAAK,CAACF,QAAQ,CAACG,MAAM,IAAI,GAAG,EAAE;IAChCE,KAAK,CAAC,sCAAsC,CAAC;EAC/C;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAe;EACbM,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,GAAEb,MAAO,QAAO,CAAC;IACjD,OAAOY,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;IAE5B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAML,KAAK,CAACqB,IAAI,CAAE,GAAEnB,MAAO,QAAO,EAAE;QACnDoB,IAAI,EAAE,CAAC;QACPC,UAAU,EAAE,KAAK,CAAE;MACrB,CAAC,CAAC;MAEF,OAAOlB,QAAQ,CAACW,IAAI;IACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACd;MACAY,OAAO,CAACZ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACiB,OAAO,CAAC;MAClD,OAAO,IAAI;IACb;EACF,CAAC;EACDC,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtCR,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEM,EAAE;MAAEC;IAAW,CAAC,CAAC;IAE/C,IAAI;MACF,MAAMtB,QAAQ,GAAG,MAAML,KAAK,CAAC4B,GAAG,CAAE,GAAE1B,MAAO,UAASwB,EAAG,EAAC,EAAE;QACxDH,UAAU,EAAEI;MACd,CAAC,CAAC;MAEF,OAAOtB,QAAQ,CAACW,IAAI;IACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACd;MACAY,OAAO,CAACZ,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACiB,OAAO,CAAC;MAC9D,OAAO,IAAI;IACb;EACF,CAAC;EAEDK,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxBP,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAEzB,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAML,KAAK,CAAC8B,MAAM,CAAE,GAAE5B,MAAO,UAASwB,EAAG,EAAC,CAAC;MAE5D,IAAIrB,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BW,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C,CAAC,MAAM;QACL;QACAD,OAAO,CAACZ,KAAK,CAAC,sBAAsB,EAAEF,QAAQ,CAAC0B,UAAU,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACd;MACAY,OAAO,CAACZ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACiB,OAAO,CAAC;IACtD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}