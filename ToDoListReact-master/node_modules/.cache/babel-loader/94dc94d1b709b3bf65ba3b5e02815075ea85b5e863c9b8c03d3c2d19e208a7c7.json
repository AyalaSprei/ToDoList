{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"http://localhost:5107\";\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const response = await fetch(`${apiUrl}/items`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name: name,\n        IsComplete: false // Assuming you want to set IsComplete to false for new tasks\n      })\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      // Handle error\n      console.error('Error adding task:', response.statusText);\n      return null;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    const response = await fetch(`${apiUrl}/items/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        IsComplete: isComplete\n      })\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      // Handle error\n      console.error('Error setting task completion:', response.statusText);\n      return null;\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask');\n    const response = await fetch(`${apiBaseUrl}/items/${id}`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      console.log('Task deleted successfully');\n    } else {\n      // Handle error\n      console.error('Error deleting task:', response.statusText);\n    }\n  }\n};","map":{"version":3,"names":["axios","apiUrl","getTasks","result","get","data","addTask","name","console","log","response","fetch","method","headers","body","JSON","stringify","Name","IsComplete","ok","json","error","statusText","setCompleted","id","isComplete","deleteTask","apiBaseUrl"],"sources":["C:/Users/שפריי/Documents/שנה ג/2/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiUrl = \"http://localhost:5107\"\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`)    \n    return result.data;\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name);\n\n    const response = await fetch(`${apiUrl}/items`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        Name: name,\n        IsComplete: false, // Assuming you want to set IsComplete to false for new tasks\n      }),\n    });\n\n    if (response.ok) {\n      return await response.json();\n    } else {\n      // Handle error\n      console.error('Error adding task:', response.statusText);\n      return null;\n    }\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n\n    const response = await fetch(`${apiUrl}/items/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        IsComplete: isComplete,\n      }),\n    });\n\n    if (response.ok) {\n      return await response.json();\n    } else {\n      // Handle error\n      console.error('Error setting task completion:', response.statusText);\n      return null;\n    }\n  },\n  deleteTask: async (id) => {\n    console.log('deleteTask');\n\n    const response = await fetch(`${apiBaseUrl}/items/${id}`, {\n      method: 'DELETE',\n    });\n\n    if (response.ok) {\n      console.log('Task deleted successfully');\n    } else {\n      // Handle error\n      console.error('Error deleting task:', response.statusText);\n    }\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,MAAO,QAAO,CAAC;IACjD,OAAOE,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;IAE5B,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,MAAO,QAAO,EAAE;MAC9CW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEV,IAAI;QACVW,UAAU,EAAE,KAAK,CAAE;MACrB,CAAC;IACH,CAAC,CAAC;IAEF,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACf,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAC9B,CAAC,MAAM;MACL;MACAZ,OAAO,CAACa,KAAK,CAAC,oBAAoB,EAAEX,QAAQ,CAACY,UAAU,CAAC;MACxD,OAAO,IAAI;IACb;EACF,CAAC;EAEDC,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtCjB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEe,EAAE;MAAEC;IAAW,CAAC,CAAC;IAE/C,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,MAAO,UAASuB,EAAG,EAAC,EAAE;MACpDZ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBE,UAAU,EAAEO;MACd,CAAC;IACH,CAAC,CAAC;IAEF,IAAIf,QAAQ,CAACS,EAAE,EAAE;MACf,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAC9B,CAAC,MAAM;MACL;MACAZ,OAAO,CAACa,KAAK,CAAC,gCAAgC,EAAEX,QAAQ,CAACY,UAAU,CAAC;MACpE,OAAO,IAAI;IACb;EACF,CAAC;EACDI,UAAU,EAAE,MAAOF,EAAE,IAAK;IACxBhB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEgB,UAAW,UAASH,EAAG,EAAC,EAAE;MACxDZ,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAIF,QAAQ,CAACS,EAAE,EAAE;MACfX,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,MAAM;MACL;MACAD,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAEX,QAAQ,CAACY,UAAU,CAAC;IAC5D;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}